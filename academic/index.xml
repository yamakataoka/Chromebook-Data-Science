<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yamato Kataoka on Yamato Kataoka</title>
    <link>/</link>
    <description>Recent content in Yamato Kataoka on Yamato Kataoka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ames Housing Prices Project</title>
      <link>/project/ames_housing_prices_project/ames-housing-prices/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/ames_housing_prices_project/ames-housing-prices/</guid>
      <description>


&lt;div id=&#34;intro-background&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Intro &amp;amp; Background&lt;/h3&gt;
&lt;p&gt;I’ve just joined the &lt;a href=&#34;https://www.kaggle.com/c/house-prices-advanced-regression-techniques&#34;&gt;House Prices: Advanced Regression Techniques Competition&lt;/a&gt;, whch is a Getting Started competition.&lt;/p&gt;
&lt;p&gt;Kaggle describes this competition as follows:&lt;/p&gt;
&lt;p&gt;Ask a home buyer to describe their dream house, and they probably won’t begin with the height of the basement ceiling or the proximity to an east-west railroad. But this playground competition’s dataset proves that much more influences price negotiations than the number of bedrooms or a white-picket fence.&lt;/p&gt;
&lt;p&gt;With 79 explanatory variables describing (almost) every aspect of residential homes in Ames, Iowa, this competition challenges us to predict the final price of each home.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./img/hosue-clipart-sold-1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;SO, we’ll try to answer the question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you figure out how much a house will sell for?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The Data&lt;/h3&gt;
&lt;div id=&#34;accessing-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Accessing Data&lt;/h4&gt;
&lt;p&gt;Now, we’ll download and get the data directly from the competitions data &lt;a href=&#34;https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://jse.amstat.org/v19n3/decock.pdf&#34;&gt;Ames Housing dataset&lt;/a&gt; was compiled by Dean De Cock for use in data science education. It’s an incredible alternative for data scientists looking for a modernized and expanded version of the often cited Boston Housing dataset.&lt;/p&gt;
&lt;p&gt;Here’s a brief file description;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;train.csv - the training set&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;test.csv - the test set&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;data_description.txt - full description of each column, originally prepared by Dean De Cock but lightly edited to match the column names used here&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sample_submission.csv - a benchmark submission from a linear regression on year and month of sale, lot square footage, and number of bedrooms&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find the data dictionaries for on &lt;a href=&#34;https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data&#34;&gt;https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Loading Data&lt;/h4&gt;
&lt;p&gt;We’ll load the data and run the code below to create an object called &lt;code&gt;iowa_data&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You&amp;#39;d read the data and store data in a tibble
iowa_data &amp;lt;- read_csv(&amp;quot;data/raw_data/train.csv&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   .default = col_character(),
##   Id = col_double(),
##   MSSubClass = col_double(),
##   LotFrontage = col_double(),
##   LotArea = col_double(),
##   OverallQual = col_double(),
##   OverallCond = col_double(),
##   YearBuilt = col_double(),
##   YearRemodAdd = col_double(),
##   MasVnrArea = col_double(),
##   BsmtFinSF1 = col_double(),
##   BsmtFinSF2 = col_double(),
##   BsmtUnfSF = col_double(),
##   TotalBsmtSF = col_double(),
##   `1stFlrSF` = col_double(),
##   `2ndFlrSF` = col_double(),
##   LowQualFinSF = col_double(),
##   GrLivArea = col_double(),
##   BsmtFullBath = col_double(),
##   BsmtHalfBath = col_double(),
##   FullBath = col_double()
##   # ... with 18 more columns
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## See spec(...) for full column specifications.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# we&amp;#39;ll make sure Condition1 is a factor &amp;amp; not a char
iowa_data$Condition1 &amp;lt;- as.factor(iowa_data$Condition1)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-analysis-of-housing-prices-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Exploratory Analysis of Housing Prices Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# now we&amp;#39;ll summarize the iowa_data dataframe
summary(iowa_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Id           MSSubClass      MSZoning          LotFrontage    
##  Min.   :   1.0   Min.   : 20.0   Length:1460        Min.   : 21.00  
##  1st Qu.: 365.8   1st Qu.: 20.0   Class :character   1st Qu.: 59.00  
##  Median : 730.5   Median : 50.0   Mode  :character   Median : 69.00  
##  Mean   : 730.5   Mean   : 56.9                      Mean   : 70.05  
##  3rd Qu.:1095.2   3rd Qu.: 70.0                      3rd Qu.: 80.00  
##  Max.   :1460.0   Max.   :190.0                      Max.   :313.00  
##                                                      NA&amp;#39;s   :259     
##     LotArea          Street             Alley             LotShape        
##  Min.   :  1300   Length:1460        Length:1460        Length:1460       
##  1st Qu.:  7554   Class :character   Class :character   Class :character  
##  Median :  9478   Mode  :character   Mode  :character   Mode  :character  
##  Mean   : 10517                                                           
##  3rd Qu.: 11602                                                           
##  Max.   :215245                                                           
##                                                                           
##  LandContour         Utilities          LotConfig        
##  Length:1460        Length:1460        Length:1460       
##  Class :character   Class :character   Class :character  
##  Mode  :character   Mode  :character   Mode  :character  
##                                                          
##                                                          
##                                                          
##                                                          
##   LandSlope         Neighborhood         Condition1    Condition2       
##  Length:1460        Length:1460        Norm   :1260   Length:1460       
##  Class :character   Class :character   Feedr  :  81   Class :character  
##  Mode  :character   Mode  :character   Artery :  48   Mode  :character  
##                                        RRAn   :  26                     
##                                        PosN   :  19                     
##                                        RRAe   :  11                     
##                                        (Other):  15                     
##    BldgType          HouseStyle         OverallQual      OverallCond   
##  Length:1460        Length:1460        Min.   : 1.000   Min.   :1.000  
##  Class :character   Class :character   1st Qu.: 5.000   1st Qu.:5.000  
##  Mode  :character   Mode  :character   Median : 6.000   Median :5.000  
##                                        Mean   : 6.099   Mean   :5.575  
##                                        3rd Qu.: 7.000   3rd Qu.:6.000  
##                                        Max.   :10.000   Max.   :9.000  
##                                                                        
##    YearBuilt     YearRemodAdd   RoofStyle           RoofMatl        
##  Min.   :1872   Min.   :1950   Length:1460        Length:1460       
##  1st Qu.:1954   1st Qu.:1967   Class :character   Class :character  
##  Median :1973   Median :1994   Mode  :character   Mode  :character  
##  Mean   :1971   Mean   :1985                                        
##  3rd Qu.:2000   3rd Qu.:2004                                        
##  Max.   :2010   Max.   :2010                                        
##                                                                     
##  Exterior1st        Exterior2nd         MasVnrType          MasVnrArea    
##  Length:1460        Length:1460        Length:1460        Min.   :   0.0  
##  Class :character   Class :character   Class :character   1st Qu.:   0.0  
##  Mode  :character   Mode  :character   Mode  :character   Median :   0.0  
##                                                           Mean   : 103.7  
##                                                           3rd Qu.: 166.0  
##                                                           Max.   :1600.0  
##                                                           NA&amp;#39;s   :8       
##   ExterQual          ExterCond          Foundation       
##  Length:1460        Length:1460        Length:1460       
##  Class :character   Class :character   Class :character  
##  Mode  :character   Mode  :character   Mode  :character  
##                                                          
##                                                          
##                                                          
##                                                          
##    BsmtQual           BsmtCond         BsmtExposure      
##  Length:1460        Length:1460        Length:1460       
##  Class :character   Class :character   Class :character  
##  Mode  :character   Mode  :character   Mode  :character  
##                                                          
##                                                          
##                                                          
##                                                          
##  BsmtFinType1         BsmtFinSF1     BsmtFinType2         BsmtFinSF2     
##  Length:1460        Min.   :   0.0   Length:1460        Min.   :   0.00  
##  Class :character   1st Qu.:   0.0   Class :character   1st Qu.:   0.00  
##  Mode  :character   Median : 383.5   Mode  :character   Median :   0.00  
##                     Mean   : 443.6                      Mean   :  46.55  
##                     3rd Qu.: 712.2                      3rd Qu.:   0.00  
##                     Max.   :5644.0                      Max.   :1474.00  
##                                                                          
##    BsmtUnfSF       TotalBsmtSF       Heating           HeatingQC        
##  Min.   :   0.0   Min.   :   0.0   Length:1460        Length:1460       
##  1st Qu.: 223.0   1st Qu.: 795.8   Class :character   Class :character  
##  Median : 477.5   Median : 991.5   Mode  :character   Mode  :character  
##  Mean   : 567.2   Mean   :1057.4                                        
##  3rd Qu.: 808.0   3rd Qu.:1298.2                                        
##  Max.   :2336.0   Max.   :6110.0                                        
##                                                                         
##   CentralAir         Electrical           1stFlrSF       2ndFlrSF   
##  Length:1460        Length:1460        Min.   : 334   Min.   :   0  
##  Class :character   Class :character   1st Qu.: 882   1st Qu.:   0  
##  Mode  :character   Mode  :character   Median :1087   Median :   0  
##                                        Mean   :1163   Mean   : 347  
##                                        3rd Qu.:1391   3rd Qu.: 728  
##                                        Max.   :4692   Max.   :2065  
##                                                                     
##   LowQualFinSF       GrLivArea     BsmtFullBath     BsmtHalfBath    
##  Min.   :  0.000   Min.   : 334   Min.   :0.0000   Min.   :0.00000  
##  1st Qu.:  0.000   1st Qu.:1130   1st Qu.:0.0000   1st Qu.:0.00000  
##  Median :  0.000   Median :1464   Median :0.0000   Median :0.00000  
##  Mean   :  5.845   Mean   :1515   Mean   :0.4253   Mean   :0.05753  
##  3rd Qu.:  0.000   3rd Qu.:1777   3rd Qu.:1.0000   3rd Qu.:0.00000  
##  Max.   :572.000   Max.   :5642   Max.   :3.0000   Max.   :2.00000  
##                                                                     
##     FullBath        HalfBath       BedroomAbvGr    KitchenAbvGr  
##  Min.   :0.000   Min.   :0.0000   Min.   :0.000   Min.   :0.000  
##  1st Qu.:1.000   1st Qu.:0.0000   1st Qu.:2.000   1st Qu.:1.000  
##  Median :2.000   Median :0.0000   Median :3.000   Median :1.000  
##  Mean   :1.565   Mean   :0.3829   Mean   :2.866   Mean   :1.047  
##  3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.:3.000   3rd Qu.:1.000  
##  Max.   :3.000   Max.   :2.0000   Max.   :8.000   Max.   :3.000  
##                                                                  
##  KitchenQual         TotRmsAbvGrd     Functional          Fireplaces   
##  Length:1460        Min.   : 2.000   Length:1460        Min.   :0.000  
##  Class :character   1st Qu.: 5.000   Class :character   1st Qu.:0.000  
##  Mode  :character   Median : 6.000   Mode  :character   Median :1.000  
##                     Mean   : 6.518                      Mean   :0.613  
##                     3rd Qu.: 7.000                      3rd Qu.:1.000  
##                     Max.   :14.000                      Max.   :3.000  
##                                                                        
##  FireplaceQu         GarageType         GarageYrBlt   GarageFinish      
##  Length:1460        Length:1460        Min.   :1900   Length:1460       
##  Class :character   Class :character   1st Qu.:1961   Class :character  
##  Mode  :character   Mode  :character   Median :1980   Mode  :character  
##                                        Mean   :1979                     
##                                        3rd Qu.:2002                     
##                                        Max.   :2010                     
##                                        NA&amp;#39;s   :81                       
##    GarageCars      GarageArea      GarageQual         GarageCond       
##  Min.   :0.000   Min.   :   0.0   Length:1460        Length:1460       
##  1st Qu.:1.000   1st Qu.: 334.5   Class :character   Class :character  
##  Median :2.000   Median : 480.0   Mode  :character   Mode  :character  
##  Mean   :1.767   Mean   : 473.0                                        
##  3rd Qu.:2.000   3rd Qu.: 576.0                                        
##  Max.   :4.000   Max.   :1418.0                                        
##                                                                        
##   PavedDrive          WoodDeckSF      OpenPorchSF     EnclosedPorch   
##  Length:1460        Min.   :  0.00   Min.   :  0.00   Min.   :  0.00  
##  Class :character   1st Qu.:  0.00   1st Qu.:  0.00   1st Qu.:  0.00  
##  Mode  :character   Median :  0.00   Median : 25.00   Median :  0.00  
##                     Mean   : 94.24   Mean   : 46.66   Mean   : 21.95  
##                     3rd Qu.:168.00   3rd Qu.: 68.00   3rd Qu.:  0.00  
##                     Max.   :857.00   Max.   :547.00   Max.   :552.00  
##                                                                       
##    3SsnPorch       ScreenPorch        PoolArea          PoolQC         
##  Min.   :  0.00   Min.   :  0.00   Min.   :  0.000   Length:1460       
##  1st Qu.:  0.00   1st Qu.:  0.00   1st Qu.:  0.000   Class :character  
##  Median :  0.00   Median :  0.00   Median :  0.000   Mode  :character  
##  Mean   :  3.41   Mean   : 15.06   Mean   :  2.759                     
##  3rd Qu.:  0.00   3rd Qu.:  0.00   3rd Qu.:  0.000                     
##  Max.   :508.00   Max.   :480.00   Max.   :738.000                     
##                                                                        
##     Fence           MiscFeature           MiscVal             MoSold      
##  Length:1460        Length:1460        Min.   :    0.00   Min.   : 1.000  
##  Class :character   Class :character   1st Qu.:    0.00   1st Qu.: 5.000  
##  Mode  :character   Mode  :character   Median :    0.00   Median : 6.000  
##                                        Mean   :   43.49   Mean   : 6.322  
##                                        3rd Qu.:    0.00   3rd Qu.: 8.000  
##                                        Max.   :15500.00   Max.   :12.000  
##                                                                           
##      YrSold       SaleType         SaleCondition        SalePrice     
##  Min.   :2006   Length:1460        Length:1460        Min.   : 34900  
##  1st Qu.:2007   Class :character   Class :character   1st Qu.:129975  
##  Median :2008   Mode  :character   Mode  :character   Median :163000  
##  Mean   :2008                                         Mean   :180921  
##  3rd Qu.:2009                                         3rd Qu.:214000  
##  Max.   :2010                                         Max.   :755000  
## &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each little chunk of output (e.g. “X1”, “Suburb”, “Address”, “Rooms”) tell us about a specific column in our dataframe.&lt;/p&gt;
&lt;p&gt;If the column is numeric, though, it will list information about the mean, median, 25th and 75th quartiles, minimum and maximum.&lt;/p&gt;
&lt;p&gt;The median year in which the houses in this dataset were built is 1973 (&lt;code&gt;YearBuilt&lt;/code&gt;). In addtion, we’ll find that the maximum number or rooms are 14 (&lt;code&gt;TotRmsAbvGrd&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prediction-data-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prediction Data Analysis&lt;/h3&gt;
&lt;div id=&#34;data-splitting&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Data Splitting&lt;/h4&gt;
&lt;p&gt;We’ll take our dataset and split it into a &lt;code&gt;training&lt;/code&gt; set and a &lt;code&gt;tuning&lt;/code&gt; set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## get Index for training set
set.seed(123)
trainIndex &amp;lt;- createDataPartition(iowa_data$Id, p = .7, 
                                  list = FALSE, 
                                  times = 1)

## split into training and tuning set                                  
iowa_train &amp;lt;- iowa_data %&amp;gt;% slice(trainIndex)
iowa_tune &amp;lt;- iowa_data %&amp;gt;% slice(-trainIndex)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;decision-tree-analysis&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Decision Tree analysis&lt;/h4&gt;
&lt;p&gt;We can then fit a new model using our training data and test it using our testing data.&lt;/p&gt;
&lt;p&gt;We’ll be predicting the &lt;code&gt;SalePrice&lt;/code&gt; variable. And we start with a narrower set of numeric variables and fit a model that can predict your target variable using the following predictors;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LotArea&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;YearBuilt&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Condition1 (how close to the main road the house is)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FullBath&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BedroomAbvGr&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TotRmsAbvGrd&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’re going to use the &lt;code&gt;rpart()&lt;/code&gt; function from the &lt;code&gt;rpart package&lt;/code&gt; to build our decision tree using the prediction target (&lt;code&gt;SalePrice&lt;/code&gt;) and predictors (&lt;code&gt;set of numeric variables&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# build a model to predict housing prices in Iowa using our training set
fit &amp;lt;- rpart(SalePrice ~ TotRmsAbvGrd + FullBath + LotArea + Condition1 +
             YearBuilt + BedroomAbvGr, data = iowa_train)
# get the mean average error for our model
mae(model = fit, data = iowa_tune)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 37534.09&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, we just started with one called Mean Absolute Error (also called MAE) for summarizing model quality.&lt;/p&gt;
&lt;p&gt;The prediction error for each house is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(error=actual−predicted\)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With the MAE metric, we take the absolute value of each error. This converts each error to a positive number. We then take the average of those absolute errors. This is our measure of model quality.&lt;/p&gt;
&lt;p&gt;We can get the MAE for our model using the &lt;code&gt;mae()&lt;/code&gt; function, from the &lt;code&gt;modelr package&lt;/code&gt;. The &lt;code&gt;mae()&lt;/code&gt; function takes in a model and the dataset to test it against.&lt;/p&gt;
&lt;p&gt;On average, our predictions are off by about 37534.09 dollars.&lt;/p&gt;
&lt;p&gt;Now, we built prediction model, so we can actually look at the tree it has built.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# plot our regression tree 
plot(fit, uniform=TRUE)
# add text labels &amp;amp; make them 60% as big as they are by default
text(fit, cex=.6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/ames_housing_prices_project/index_files/figure-html/model-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can now use our fitted model to predict the prices of some houses, using the &lt;code&gt;predict()&lt;/code&gt; function for our tuning set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(&amp;quot;Making predictions for the following 5 houses:&amp;quot;)
## [1] &amp;quot;Making predictions for the following 5 houses:&amp;quot;
print(head(iowa_tune))
## # A tibble: 6 x 81
##      Id MSSubClass MSZoning LotFrontage LotArea Street Alley LotShape
##   &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   
## 1     2         20 RL                80    9600 Pave   &amp;lt;NA&amp;gt;  Reg     
## 2     4         70 RL                60    9550 Pave   &amp;lt;NA&amp;gt;  IR1     
## 3     5         60 RL                84   14260 Pave   &amp;lt;NA&amp;gt;  IR1     
## 4     6         50 RL                85   14115 Pave   &amp;lt;NA&amp;gt;  IR1     
## 5     7         20 RL                75   10084 Pave   &amp;lt;NA&amp;gt;  Reg     
## 6    10        190 RL                50    7420 Pave   &amp;lt;NA&amp;gt;  Reg     
## # ... with 73 more variables: LandContour &amp;lt;chr&amp;gt;, Utilities &amp;lt;chr&amp;gt;,
## #   LotConfig &amp;lt;chr&amp;gt;, LandSlope &amp;lt;chr&amp;gt;, Neighborhood &amp;lt;chr&amp;gt;,
## #   Condition1 &amp;lt;fct&amp;gt;, Condition2 &amp;lt;chr&amp;gt;, BldgType &amp;lt;chr&amp;gt;, HouseStyle &amp;lt;chr&amp;gt;,
## #   OverallQual &amp;lt;dbl&amp;gt;, OverallCond &amp;lt;dbl&amp;gt;, YearBuilt &amp;lt;dbl&amp;gt;,
## #   YearRemodAdd &amp;lt;dbl&amp;gt;, RoofStyle &amp;lt;chr&amp;gt;, RoofMatl &amp;lt;chr&amp;gt;,
## #   Exterior1st &amp;lt;chr&amp;gt;, Exterior2nd &amp;lt;chr&amp;gt;, MasVnrType &amp;lt;chr&amp;gt;,
## #   MasVnrArea &amp;lt;dbl&amp;gt;, ExterQual &amp;lt;chr&amp;gt;, ExterCond &amp;lt;chr&amp;gt;, Foundation &amp;lt;chr&amp;gt;,
## #   BsmtQual &amp;lt;chr&amp;gt;, BsmtCond &amp;lt;chr&amp;gt;, BsmtExposure &amp;lt;chr&amp;gt;,
## #   BsmtFinType1 &amp;lt;chr&amp;gt;, BsmtFinSF1 &amp;lt;dbl&amp;gt;, BsmtFinType2 &amp;lt;chr&amp;gt;,
## #   BsmtFinSF2 &amp;lt;dbl&amp;gt;, BsmtUnfSF &amp;lt;dbl&amp;gt;, TotalBsmtSF &amp;lt;dbl&amp;gt;, Heating &amp;lt;chr&amp;gt;,
## #   HeatingQC &amp;lt;chr&amp;gt;, CentralAir &amp;lt;chr&amp;gt;, Electrical &amp;lt;chr&amp;gt;, `1stFlrSF` &amp;lt;dbl&amp;gt;,
## #   `2ndFlrSF` &amp;lt;dbl&amp;gt;, LowQualFinSF &amp;lt;dbl&amp;gt;, GrLivArea &amp;lt;dbl&amp;gt;,
## #   BsmtFullBath &amp;lt;dbl&amp;gt;, BsmtHalfBath &amp;lt;dbl&amp;gt;, FullBath &amp;lt;dbl&amp;gt;,
## #   HalfBath &amp;lt;dbl&amp;gt;, BedroomAbvGr &amp;lt;dbl&amp;gt;, KitchenAbvGr &amp;lt;dbl&amp;gt;,
## #   KitchenQual &amp;lt;chr&amp;gt;, TotRmsAbvGrd &amp;lt;dbl&amp;gt;, Functional &amp;lt;chr&amp;gt;,
## #   Fireplaces &amp;lt;dbl&amp;gt;, FireplaceQu &amp;lt;chr&amp;gt;, GarageType &amp;lt;chr&amp;gt;,
## #   GarageYrBlt &amp;lt;dbl&amp;gt;, GarageFinish &amp;lt;chr&amp;gt;, GarageCars &amp;lt;dbl&amp;gt;,
## #   GarageArea &amp;lt;dbl&amp;gt;, GarageQual &amp;lt;chr&amp;gt;, GarageCond &amp;lt;chr&amp;gt;,
## #   PavedDrive &amp;lt;chr&amp;gt;, WoodDeckSF &amp;lt;dbl&amp;gt;, OpenPorchSF &amp;lt;dbl&amp;gt;,
## #   EnclosedPorch &amp;lt;dbl&amp;gt;, `3SsnPorch` &amp;lt;dbl&amp;gt;, ScreenPorch &amp;lt;dbl&amp;gt;,
## #   PoolArea &amp;lt;dbl&amp;gt;, PoolQC &amp;lt;chr&amp;gt;, Fence &amp;lt;chr&amp;gt;, MiscFeature &amp;lt;chr&amp;gt;,
## #   MiscVal &amp;lt;dbl&amp;gt;, MoSold &amp;lt;dbl&amp;gt;, YrSold &amp;lt;dbl&amp;gt;, SaleType &amp;lt;chr&amp;gt;,
## #   SaleCondition &amp;lt;chr&amp;gt;, SalePrice &amp;lt;dbl&amp;gt;

print(&amp;quot;The predictions are&amp;quot;)
## [1] &amp;quot;The predictions are&amp;quot;
print(predict(fit, head(iowa_tune)))
##        1        2        3        4        5        6 
## 150232.8 150232.8 259061.7 340455.9 200815.1 122309.3

print(&amp;quot;Actual price&amp;quot;)
## [1] &amp;quot;Actual price&amp;quot;
print(head(iowa_tune$SalePrice))
## [1] 181500 140000 250000 143000 307000 118000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, as you can above, the first house we predicted cost 181,500 dollars and you predicted it would cost 150,232.8 dollars the error is 31,267.2 dollars.&lt;/p&gt;
&lt;p&gt;Then now, we are setting the tree depth with the maxdepth argument to control overfitting vs underfitting.&lt;/p&gt;
&lt;p&gt;We can use a utility function to help compare MAE scores from different values for maxdepth:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# a function to get the maximum average error for a given max depth. You should pass in
# the target as the name of the target column and the predictors as vector where
# each item in the vector is the name of the column
get_mae &amp;lt;- function(maxdepth, target, predictors, training_data, tuning_data){
    
    # turn the predictors &amp;amp; target into a formula to pass to rpart()
    predictors &amp;lt;- paste(predictors, collapse=&amp;quot;+&amp;quot;)
    formula &amp;lt;- as.formula(paste(target,&amp;quot;~&amp;quot;,predictors,sep = &amp;quot;&amp;quot;))
    
    # build our model
    model &amp;lt;- rpart(formula, data = training_data,
                   control = rpart.control(maxdepth = maxdepth))
    # get the mae
    mae &amp;lt;- mae(model, tuning_data)
    return(mae)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can use a for-loop to compare the accuracy of models built with different values for maxdepth. In this case, the lowest MAE is actually 5.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# target &amp;amp; predictors to feed into our formula
target &amp;lt;- &amp;quot;SalePrice&amp;quot;
predictors &amp;lt;-  c(&amp;quot;TotRmsAbvGrd&amp;quot;, &amp;quot;FullBath&amp;quot;, &amp;quot;LotArea&amp;quot;, &amp;quot;Condition1&amp;quot;, &amp;quot;YearBuilt&amp;quot;, &amp;quot;BedroomAbvGr&amp;quot;)

# get the MAE for maxdepths between 1 &amp;amp; 10
for(i in 1:10){
    mae &amp;lt;- get_mae(maxdepth = i, target = target, predictors = predictors,
                  training_data = iowa_train, tuning_data = iowa_tune)
    print(glue::glue(&amp;quot;Maxdepth: &amp;quot;,i,&amp;quot;\t MAE: &amp;quot;,mae))
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Maxdepth: 1   MAE: 46982.6810339195
## Maxdepth: 2   MAE: 41968.2267110074
## Maxdepth: 3   MAE: 39012.1922817192
## Maxdepth: 4   MAE: 38863.924322096
## Maxdepth: 5   MAE: 37534.0937255204
## Maxdepth: 6   MAE: 37534.0937255204
## Maxdepth: 7   MAE: 37534.0937255204
## Maxdepth: 8   MAE: 37534.0937255204
## Maxdepth: 9   MAE: 37534.0937255204
## Maxdepth: 10  MAE: 37534.0937255204&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;37,534.09 is the lowest mean average error for this dataset, which is given this dataset and our current stopping condition, 6 is the maximum number of nodes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forests-analysis&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Random Forests analysis&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# fit a random forest model to our training set
fitRandomForest &amp;lt;- randomForest(SalePrice ~ TotRmsAbvGrd + FullBath + LotArea + Condition1 +
             YearBuilt + BedroomAbvGr, data = iowa_train)
# get the mean average error for our new model, based on our tuning set
mae(model = fitRandomForest, data = iowa_tune)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 30894.18&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On average, this predictions are off by around 30,894.18 dollars. This is a big improvement over our previous best decision tree.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We analyzed and tried to answer the question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you figure out how much a house will sell for?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then, I’ve submitted above prediction values for the &lt;a href=&#34;https://www.kaggle.com/c/house-prices-advanced-regression-techniques&#34;&gt;House Prices: Advanced Regression Techniques Competition&lt;/a&gt;. As a result, I’ve ranked at 3624th.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./img/screen-shot.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ATUS Survey Data</title>
      <link>/project/atus_survey/atus-survey-data/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/atus_survey/atus-survey-data/</guid>
      <description>


&lt;div id=&#34;intro-background&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Intro &amp;amp; Background&lt;/h3&gt;
&lt;p&gt;I’ve just finished Final Project of Data Analysis course on leanpub.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
Completed Data Analysis from &lt;a href=&#34;https://twitter.com/leanpub?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@leanpub&lt;/span&gt;&lt;/a&gt; &lt;br&gt;Completed 9/11 from &lt;a href=&#34;https://twitter.com/hashtag/CBDS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CBDS&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/DataScience?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#DataScience&lt;/a&gt; &lt;a href=&#34;https://t.co/ZYIthtiAGP&#34;&gt;pic.twitter.com/ZYIthtiAGP&lt;/a&gt;
&lt;/p&gt;
— Yamato Kataoka (&lt;span class=&#34;citation&#34;&gt;@_yamatt&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/_yamatt/status/1077159028256497665?ref_src=twsrc%5Etfw&#34;&gt;December 24, 2018&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;This project has been generated to practice everything I have learned in this course set.&lt;/p&gt;
&lt;p&gt;We’ll be interested in some sort of questions like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does women or men spend more time with their children?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do younger parents spend more time with their children?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do richer people spend more time with their children compared to poorer people?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do married couples spend more time with their children compared to single parents?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do full-time workers spend more time with their children compared to part-time workers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;How do different income groups spend time doing each activity?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;American Time Use Survey (ATUS)&lt;/strong&gt; is a time-use survey of Americans, which is sponsored by the Bureau of Labor Statistics (BLS) and conducted by the U.S. Census Bureau. Respondents of the survey are asked to keep a diary for one day carefully recording the amount of time they spend on various activities including working, leisure, childcare, and household activities.&lt;/p&gt;
&lt;p&gt;Included in the data are main &lt;strong&gt;demographic variables&lt;/strong&gt; such as respondents’ age, sex, race, marital status, and education. The data also includes &lt;strong&gt;detailed income and employment information&lt;/strong&gt; for each respondent. While there are some slight changes to the survey each year, the main questions asked stay the same. You can find data dictionaries (also called codebooks) at &lt;a href=&#34;https://www.bls.gov/tus/atuscpscodebk16.pdf&#34;&gt;https://www.bls.gov/tus/atuscpscodebk16.pdf&lt;/a&gt; for the CPS data and at &lt;a href=&#34;https://www.bls.gov/tus/atusintcodebk16.pdf&#34;&gt;https://www.bls.gov/tus/atusintcodebk16.pdf&lt;/a&gt; for the rest of the variables.&lt;/p&gt;
&lt;div id=&#34;importing-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Importing Data&lt;/h4&gt;
&lt;p&gt;First we’ll have to upload the two .dat files (&lt;strong&gt;atuscps_2016.dat and atussum_2016.dat&lt;/strong&gt;) into RStudio Cloud after download from &lt;a href=&#34;https://www.bls.gov/tus/#data&#34;&gt;https://www.bls.gov/tus/#data&lt;/a&gt;
and create an object called &lt;code&gt;atus.all&lt;/code&gt;.:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(janitor)
library(ggplot2)
library(dplyr)
library(lubridate)
library(zoo)
library(forcats)
library(ggthemes)
library(knitr)
library(tidyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Read a file in table format and creates a data frame from it
atus.cps &amp;lt;- read.delim(&amp;#39;data/raw_data/atuscps_2016.dat&amp;#39;, sep=&amp;quot;,&amp;quot;)
atus.sum &amp;lt;- read.delim(&amp;#39;data/raw_data/atussum_2016.dat&amp;#39;, sep=&amp;quot;,&amp;quot;)
# We can create a table including these two dataset 
# separeted by each respondent(TUCASEID)
atus.all &amp;lt;- atus.sum %&amp;gt;%
  left_join(atus.cps %&amp;gt;% filter(TULINENO==1), by = c(&amp;quot;TUCASEID&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Exploratory Data Analysis&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bls.gov/tus/lexiconwex2016.pdf&#34;&gt;https://www.bls.gov/tus/lexiconwex2016.pdf&lt;/a&gt; lists all the activity codes. All activities start with &lt;code&gt;t&lt;/code&gt; and then a 6-digit number that combines the major category, the 2nd tier, and the 3rd tier of the activity.&lt;/p&gt;
&lt;p&gt;We’ll figure out &lt;code&gt;How much time, on average, does a person in the sample spend on “Socializing and communicating with others”?&lt;/code&gt;. According to &lt;a href=&#34;https://www.bls.gov/tus/lexiconwex2016.pdf&#34;&gt;https://www.bls.gov/tus/lexiconwex2016.pdf&lt;/a&gt;, We’ll find the variable, t120101, associated with “Socializing and communicating with others.”&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## “Socializing and communicating with others” is 120101 from https://www.bls.gov/tus/lexiconwex2016.pdf
mean(atus.all$t120101)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 38.06481&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’ll also find the activity code that is associated with “Caring For &amp;amp; Helping HH Children” to show overview of childcare.
I created a column in the data frame &lt;code&gt;atus.all&lt;/code&gt; called &lt;code&gt;CHILDCARE&lt;/code&gt; that is the sum of all the columns that start with &lt;code&gt;t0301&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;atus.all &amp;lt;- atus.all %&amp;gt;%
  # We can culculate the sum of all the columns that start with `t0301` 
  # which is related childcare.
  mutate(CHILDCARE = rowSums(.[, grep(&amp;#39;t0301&amp;#39;, colnames(.))]))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I’m wiriting code in &lt;code&gt;ggplot2&lt;/code&gt; to plot the density function of the variable &lt;code&gt;CHILDCARE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(atus.all) +
  geom_density(aes(atus.all$CHILDCARE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/childcare-density-plot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Almost all people spend around 30 minites for caring child.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;analysis-approach&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Analysis Approach&lt;/h3&gt;
&lt;div id=&#34;inferential-data-analysis&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Inferential Data Analysis&lt;/h4&gt;
&lt;p&gt;We are going to answer &lt;strong&gt;whether women or men spend more time with their children&lt;/strong&gt;. Just start by grouping individuals by their gender and calculate the average time men and women spend with their children.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;atus.all %&amp;gt;% 
  # Grouping by TESEX which is refered as respondent&amp;#39;s sex
  group_by(TESEX) %&amp;gt;% 
  summarize(.,  average_time = mean(CHILDCARE, na.rm = T))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 2
##   TESEX average_time
##   &amp;lt;int&amp;gt;        &amp;lt;dbl&amp;gt;
## 1     1         19.0
## 2     2         33.2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that women (&lt;code&gt;2&lt;/code&gt;), on average, spend around 33 minutes more with their children than men(&lt;code&gt;1&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We’ll use the &lt;code&gt;table()&lt;/code&gt; function to look at the variable &lt;code&gt;TRDPFTPT&lt;/code&gt; which shows whether the person works full time or part time. You will notice that the variable also takes the value -1. This is probably due to non-response or other data collection reasons. Replace these values with &lt;code&gt;NA&lt;/code&gt; in your data so they don’t affect your analysis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## replace -1 in the variable TRDPFTPT with NA.
atus.all$TRDPFTPT[atus.all$TRDPFTPT==-1]  &amp;lt;- &amp;quot;NA&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’ll find 4119 &lt;code&gt;NAs&lt;/code&gt; in the dataset.&lt;/p&gt;
&lt;p&gt;Now, we are going to explore what factors affect time spent with children. We are going to answer questions like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do younger parents spend more time with their children?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do richer people spend more time with their children compared to poorer people?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do married couples spend more time with their children compared to single parents?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Do full-time workers spend more time with their children compared to part-time workers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We’ll wrangle the data for each questions first.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You&amp;#39;d label from 0 to 95 by 5 for each person
labs &amp;lt;- c(paste(seq(0, 95, by = 5), seq(0 + 5 - 1, 100 - 1, by = 5), sep = &amp;quot;-&amp;quot;), paste(100, &amp;quot;+&amp;quot;, sep = &amp;quot;&amp;quot;))

# Mutated AGEGROUP colume by labs
atus.all$AGEGROUP &amp;lt;- cut(atus.all$TEAGE, breaks = c(seq(0, 100, by = 5), Inf), labels = labs, right = FALSE)

# Limited data to those who have at least one child (18 or younger) in the household
# The variable for the number of children (18 or younger) in the household is TRCHILDNUM.
atus.all.child &amp;lt;- atus.all %&amp;gt;%
  filter(.$TRCHILDNUM &amp;gt; 0) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we’ll answer each question.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Do younger parents spend more time with their children?
AGEGROUP.CHILDCARE &amp;lt;- atus.all.child %&amp;gt;%
  group_by(AGEGROUP) %&amp;gt;% 
  summarize(.,  average_time = mean(CHILDCARE, na.rm = T))

# You&amp;#39;d show average time for childcare by age group
ggplot(AGEGROUP.CHILDCARE, aes(x = AGEGROUP.CHILDCARE$AGEGROUP, y = AGEGROUP.CHILDCARE$average_time)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/data-analysis-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Do richer people spend more time with their children compared to poorer people?
HEFAMINC.CHILDCARE &amp;lt;- atus.all.child %&amp;gt;%
  # HEFAMINC is the variable which is Family Income
  # 1: Less than $5,000
  # 2: $5,000 to $7,499
  # 3: $7,500 to $9,999
  # 4: $10,000 to $12,499
  # 5: $12,500 to $14,999
  # 6: $15,000 to $19,999
  # 7: $20,000 to $24,999
  # 8: $25,000 to $29,999
  # 9: $30,000 to $34,999
  # 10: $35,000 to $39,999
  # 11: $40,000 to $49,999
  # 12: $50,000 to $59,999
  # 13: $60,000 to $74,999
  # 14: $75,000 to $99,999
  # 15: $100,000 to $149,999
  # 16: $150,000 and over
  group_by(HEFAMINC) %&amp;gt;% 
  summarize(.,  average_time = mean(CHILDCARE, na.rm = T))

ggplot(HEFAMINC.CHILDCARE, aes(x = HEFAMINC.CHILDCARE$HEFAMINC, y = HEFAMINC.CHILDCARE$average_time)) +
  geom_col() +
  scale_x_continuous(breaks = HEFAMINC.CHILDCARE$HEFAMINC) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/data-analysis-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Do married couples spend more time with their children compared to single parents?
PEMARITL.CHILDCARE &amp;lt;- atus.all.child %&amp;gt;%
  # PEMARITL refers a question, are you now married, widowed, divorced, separated, or never married?
  # 1: Married - spouse present
  # 2: Married - spouse absent
  # 3: Widowed
  # 4: Divorced
  # 5: Separated
  # 6: Never married
  group_by(PEMARITL) %&amp;gt;% 
  summarize(.,  average_time = mean(CHILDCARE, na.rm = T))

ggplot(PEMARITL.CHILDCARE, aes(x = PEMARITL.CHILDCARE$PEMARITL, y = PEMARITL.CHILDCARE$average_time)) +
  geom_col() +
  scale_x_continuous(breaks = PEMARITL.CHILDCARE$PEMARITL) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/data-analysis-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Do full-time workers spend more time with their children compared to part-time workers?
TRDPFTPT.CHILDCARE &amp;lt;- atus.all.child %&amp;gt;%
  # Again TRDPFTPT is Full time (1) or part time (2) employment status of respondent
  group_by(TRDPFTPT) %&amp;gt;% 
  summarize(.,  average_time = mean(CHILDCARE, na.rm = T))

ggplot(TRDPFTPT.CHILDCARE, aes(x = TRDPFTPT.CHILDCARE$TRDPFTPT, y = TRDPFTPT.CHILDCARE$average_time)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/data-analysis-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the analysis above, we looked at bilateral (two-way) relationships. I have learned in this course, however, that other confounding variables can be a source of bias in my analysis. So it’s much better to look at the relationship of all relevant variables associated with time spent with children together.
We’ll run a linear regression of marital status, age, sex, number of children (18 or younger), earnings, and full-time versus part-time status.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;reg_model &amp;lt;- lm(CHILDCARE ~ PEMARITL + TEAGE + TESEX + TRCHILDNUM + HEFAMINC + TRDPFTPT, data = atus.all.child) 
summary(reg_model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = CHILDCARE ~ PEMARITL + TEAGE + TESEX + TRCHILDNUM + 
##     HEFAMINC + TRDPFTPT, data = atus.all.child)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -142.18  -57.55  -31.57   24.01  815.46 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  69.2225    10.7976   6.411 1.60e-10 ***
## PEMARITL    -12.2342     0.8308 -14.726  &amp;lt; 2e-16 ***
## TEAGE        -1.0881     0.1355  -8.032 1.23e-15 ***
## TESEX        33.8984     3.1078  10.907  &amp;lt; 2e-16 ***
## TRCHILDNUM    9.0004     1.5500   5.807 6.83e-09 ***
## HEFAMINC     -0.4417     0.4038  -1.094    0.274    
## TRDPFTPT2    -2.4322     4.3800  -0.555    0.579    
## TRDPFTPTNA   16.4812     3.6774   4.482 7.60e-06 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 96.59 on 4305 degrees of freedom
## Multiple R-squared:  0.08907,    Adjusted R-squared:  0.08759 
## F-statistic: 60.13 on 7 and 4305 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the regression, the coefficient on the variable age means how much time spent with children changes if age increases by 1. Based on our results, the difference in minutes spent with children between two people with 10 years of age difference is 10 minites.&lt;/p&gt;
&lt;p&gt;We are going to see whether time spent on different activities varies by age. However, we will only consider activities at the major category levels. There are 18 major categories in the data including personal care, household activities, caring for &amp;amp; helping household members, etc. Because each activity column in the data is at the 3rd tier, we will need to start by suming columns at the activity major categories levels.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Saved the resulting data frame as df.wide.
atus.wide &amp;lt;- atus.all %&amp;gt;%
    mutate(act01 = rowSums(.[, grep(&amp;#39;t01&amp;#39;, colnames(.))]),
           act02 = rowSums(.[, grep(&amp;#39;t02&amp;#39;, colnames(.))]),
           act03 = rowSums(.[, grep(&amp;#39;t03&amp;#39;, colnames(.))]),
           act04 = rowSums(.[, grep(&amp;#39;t04&amp;#39;, colnames(.))]),
           act05 = rowSums(.[, grep(&amp;#39;t05&amp;#39;, colnames(.))]),
           act06 = rowSums(.[, grep(&amp;#39;t06&amp;#39;, colnames(.))]),
           act07 = rowSums(.[, grep(&amp;#39;t07&amp;#39;, colnames(.))]),
           act08 = rowSums(.[, grep(&amp;#39;t08&amp;#39;, colnames(.))]),
           act09 = rowSums(.[, grep(&amp;#39;t09&amp;#39;, colnames(.))]),
           act10 = rowSums(.[, grep(&amp;#39;t10&amp;#39;, colnames(.))]),
           act11 = rowSums(.[, grep(&amp;#39;t11&amp;#39;, colnames(.))]),
           act12 = rowSums(.[, grep(&amp;#39;t12&amp;#39;, colnames(.))]),
           act13 = rowSums(.[, grep(&amp;#39;t13&amp;#39;, colnames(.))]),
           act14 = rowSums(.[, grep(&amp;#39;t14&amp;#39;, colnames(.))]),
           act15 = rowSums(.[, grep(&amp;#39;t15&amp;#39;, colnames(.))]),
           act16 = rowSums(.[, grep(&amp;#39;t16&amp;#39;, colnames(.))]),
           # act17 = , there is no category 17 in the data
           act18 = rowSums(.[, grep(&amp;#39;t18&amp;#39;, colnames(.))])) %&amp;gt;% 
    select(TUCASEID, TEAGE, HEFAMINC, starts_with(&amp;quot;act&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I’ll convert the data from wide to long and saved the data frame as &lt;code&gt;df.long&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;atus.long &amp;lt;- atus.wide %&amp;gt;% 
  # use code to convert the wide format to long.
  gather(key=&amp;quot;ACTIVITY&amp;quot;, value=&amp;quot;MINS&amp;quot;, act01:act18)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Calculating the average time for each age group and call it &lt;code&gt;AVGMINS&lt;/code&gt;. In &lt;code&gt;ggplot2&lt;/code&gt;, plot &lt;code&gt;AVGMINS&lt;/code&gt; against &lt;code&gt;TEAGE&lt;/code&gt; for each category (multiple panels).Label each panel in your graph with the appropriate activity name.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;activity_names &amp;lt;- c(
  &amp;quot;act01&amp;quot; = &amp;quot;Personal Care&amp;quot;, 
  &amp;quot;act02&amp;quot; = &amp;quot;Household Activities&amp;quot;,
  &amp;quot;act03&amp;quot; = &amp;quot;Caring For &amp;amp; Helping Household Members&amp;quot;,
  &amp;quot;act04&amp;quot; = &amp;quot;Caring For &amp;amp; Helping NonHH Members&amp;quot;,
  &amp;quot;act05&amp;quot; = &amp;quot;Work &amp;amp; Work-Related Activities&amp;quot;,
  &amp;quot;act06&amp;quot; = &amp;quot;Education&amp;quot;,
  &amp;quot;act07&amp;quot; = &amp;quot;Consumer Purchases&amp;quot;,
  &amp;quot;act08&amp;quot; = &amp;quot;Professional &amp;amp; Personal Care Services&amp;quot;,
  &amp;quot;act09&amp;quot; = &amp;quot;Household Services&amp;quot;,
  &amp;quot;act10&amp;quot; = &amp;quot;Government Services &amp;amp; Civic Obligations&amp;quot;,
  &amp;quot;act11&amp;quot; = &amp;quot;Eating and Drinking&amp;quot;,
  &amp;quot;act12&amp;quot; = &amp;quot;Socializing, Relaxing, and Leisure&amp;quot;,
  &amp;quot;act13&amp;quot; = &amp;quot;Sports, Exercise, and Recreation&amp;quot;,
  &amp;quot;act14&amp;quot; = &amp;quot;Religious and Spiritual Activities&amp;quot;,
  &amp;quot;act15&amp;quot; = &amp;quot;Volunteer Activities&amp;quot;,
  &amp;quot;act16&amp;quot; = &amp;quot;Telephone Calls&amp;quot;,
  &amp;quot;act18&amp;quot; = &amp;quot;Traveling&amp;quot;
)
atus.long %&amp;gt;% 
  group_by(ACTIVITY, TEAGE) %&amp;gt;% 
  summarise(AVGMINS = mean(MINS)) %&amp;gt;% 
  ggplot(data = .) +
  geom_point(mapping = aes(x = TEAGE, y = AVGMINS)) + 
  facet_wrap(~ACTIVITY, labeller = as_labeller(activity_names))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/age-activity-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the average time spent on &lt;code&gt;Personal Care&lt;/code&gt;, &lt;code&gt;Work &amp;amp; Work-Related Activities&lt;/code&gt; and &lt;code&gt;Socializing, Relaxing, and Leisure&lt;/code&gt; varyed by age. In addtion, middle aged people work the most compared to younger and older people based on the activity category 5 (&lt;code&gt;Work &amp;amp; Work-Related Activities&lt;/code&gt;) on the graph. About the activity category 12 (&lt;code&gt;Socializing, Relaxing, and Leisure&lt;/code&gt;), Older people spend more time socializing.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-visualization&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data Visualization&lt;/h3&gt;
&lt;p&gt;Finally, we are going to create a graph that shows how different income groups spend time doing each activity. The graph is based on Henrik Lindberg’s data visualization posted &lt;a href=&#34;https://raw.githubusercontent.com/halhen/viz-pub/master/pastime-income/pastime.png&#34;&gt;here&lt;/a&gt;. The only difference is that we are only looking at the 18 major activity categories. We’ll use the long data that you created in the previous section and make the graph as close as possible to the graph by Henrik Lindberg.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## wrangle the data set
atus.long$income_pref &amp;lt;- factor(cut(atus.long$HEFAMINC,
                             breaks = c(0,3,6,8,11,13,14,15,Inf),
                             labels = c(&amp;quot;$0-10k&amp;quot;, &amp;quot;$10k-20k&amp;quot;, &amp;quot;$20k-30k&amp;quot;, &amp;quot;$30k-50k&amp;quot;, &amp;quot;$50k-75k&amp;quot;, &amp;quot;$75k-100k&amp;quot;,&amp;quot;$100k-150k&amp;quot;, &amp;quot;$150k+&amp;quot;),
                             ordered_result = T))

df &amp;lt;- atus.long %&amp;gt;% 
  group_by(ACTIVITY, income_pref) %&amp;gt;% 
  summarise(AVGMINS = mean(MINS)) 

df1 &amp;lt;- aggregate(df$AVGMINS, by=list(ACTIVITY=df$ACTIVITY), FUN=sum)
df2 &amp;lt;- df[grep(c(&amp;quot;10k|30k&amp;quot;), df$income_pref),]
df2 &amp;lt;- aggregate(df2$AVGMINS, by=list(ACTIVITY=df2$ACTIVITY), FUN=sum)
x = df2$x/df1$x
df2$PERCENT &amp;lt;- c(x)

df2 &amp;lt;- df2 %&amp;gt;%
  arrange(desc(PERCENT))

p &amp;lt;- atus.long %&amp;gt;% 
  group_by(ACTIVITY, income_pref) %&amp;gt;% 
  summarise(AVGMINS = mean(MINS)) %&amp;gt;%
  ggplot() +
  ## specify you want to generate a bar chart
  geom_bar(aes(x = ACTIVITY, y = AVGMINS, fill = income_pref),
                stat = &amp;#39;identity&amp;#39;, position = position_fill(reverse = TRUE)) +
  ## flip coordinates to make horizontal box plot
  coord_flip() + 
  ## change the colors of the bars
  scale_fill_manual(values = c(&amp;quot;royalblue4&amp;quot;,&amp;quot;royalblue3&amp;quot;, &amp;quot;deepskyblue3&amp;quot;, &amp;quot;deepskyblue2&amp;quot;,&amp;quot;goldenrod&amp;quot;,&amp;quot;darkgoldenrod3&amp;quot;, &amp;quot;darkgoldenrod&amp;quot;, &amp;quot;darkgoldenrod4&amp;quot;)) + 
  ## change the scale/labels of the actvity variable (x-axis)
  scale_x_discrete(limits = fct_rev(df2$ACTIVITY),
                labels = activity_names) +
  ## change the title, subtitle, and caption
  labs(title=&amp;quot;Income distributions in Americans&amp;#39; pastimes&amp;quot;, 
                subtitle=&amp;quot;This chart shows the income distribution of adult\n participans in different major spastimes. Blue groups\n earn less then the median household income\n ($50,000/year) and brown groups earn more.\n The bottom legend show the total population and\n the limits that define each group. Activities are\n odered by the percentage of above-median participation\n, meaning that activities that more people with low\n income do are at the bottom.&amp;quot;,
                caption=&amp;quot;Source: American Time Use Survey&amp;quot;) +
  ## change the theme (use ggthemes)
  theme_void() +
  guides(fill=guide_legend(title=NULL)) +
  ## fine tune the theme
  theme(axis.text = element_text(size = 10,
                                 hjust = 1),
                title = element_text(size = 16,
                                     family = &amp;quot;Times&amp;quot;),
                plot.subtitle = element_text(size = 12,
                                     family = &amp;quot;Times&amp;quot;),
                legend.position = &amp;#39;bottom&amp;#39;, 
                legend.text = element_text(size=7),
                legend.title.align = 1, 
                plot.caption = element_text(size = 10,
                                            face = &amp;quot;italic&amp;quot;), 
                panel.grid.major = element_blank(), 
                panel.grid.minor = element_blank(),
                axis.text.x = element_blank())
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./project/atus_survey/index_files/figure-html/activity-income-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A few observations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Blue groups&lt;/strong&gt; (less than the median household income　($50,000/year)) spent more time on three categories (&lt;code&gt;Socializing, Relaxing, and Leisure&lt;/code&gt;, &lt;code&gt;Religious and Spiritual Activities&lt;/code&gt; and &lt;code&gt;Telephone Calls&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;People with high income &lt;strong&gt;work harder&lt;/strong&gt; than ones with low&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We analyzed and answered some questions as the final project on Data Analysis course to try to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Translate a general question into a data science question&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Identify the type of data science question we are answering&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use data visualization and linear models to answer descriptive, exploratory,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inferential and predictive questions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implement our answers in code.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was fascinated by entire leanpub courses offered by faculty members in the Johns Hopkins Department of Biostatistics, Johns Hopkins Bloomberg School of Public Health. Please check out &lt;a href=&#34;http://jhudatascience.org/chromebookdatascience/index.html&#34;&gt;the course website&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Welcome!</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;welcome&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Welcome&lt;/h1&gt;
&lt;p&gt;I’m Yamato Kataoka! I’ve recently completed the Chromebook Data Science Course Set on Leanpub.&lt;/p&gt;
&lt;p&gt;I’m interested in working with data and answering interesting questions.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Example Page</title>
      <link>/tutorial/example/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/example/</guid>
      <description>

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;em&gt;Slides&lt;/em&gt; feature and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-id/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-id/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/example-slides/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
